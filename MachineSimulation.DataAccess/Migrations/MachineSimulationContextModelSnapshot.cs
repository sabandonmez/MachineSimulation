// <auto-generated />
using System;
using MachineSimulation.DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachineSimulation.DataAccess.Migrations
{
    [DbContext(typeof(MachineSimulationContext))]
    partial class MachineSimulationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ModbusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "PlastikEnjeksiyon.jpg",
                            MachineName = "Plastik Enjeksiyon",
                            ModbusId = 4096
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "KitamuraCncTezgahı.jpg",
                            MachineName = "Kitamura Cnc Tezgahı",
                            ModbusId = 4097
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "AbkantPress.jpg",
                            MachineName = "Abkant Press",
                            ModbusId = 4098
                        });
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.MachineLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MachineLogs");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Event")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModbusIp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OperationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Operations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Event = 1,
                            MachineId = 1,
                            ModbusIp = 2280,
                            OperationName = "Hazırlık Başlat"
                        },
                        new
                        {
                            Id = 2,
                            Event = 2,
                            MachineId = 1,
                            ModbusIp = 2280,
                            OperationName = "Hazırlık Bitir"
                        },
                        new
                        {
                            Id = 3,
                            Event = 3,
                            MachineId = 1,
                            ModbusIp = 2273,
                            OperationName = "Üretim Başlat"
                        },
                        new
                        {
                            Id = 4,
                            Event = 4,
                            MachineId = 1,
                            ModbusIp = 2273,
                            OperationName = "Üretim Bitir"
                        },
                        new
                        {
                            Id = 13,
                            Event = 5,
                            MachineId = 1,
                            OperationName = "Otomatik Üretim Başlat"
                        },
                        new
                        {
                            Id = 14,
                            Event = 6,
                            MachineId = 1,
                            ModbusIp = 4206,
                            OperationName = "Otomatik Üretim Bitir"
                        },
                        new
                        {
                            Id = 15,
                            Event = 7,
                            MachineId = 1,
                            ModbusIp = 2280,
                            OperationName = "Duruş Başlat"
                        },
                        new
                        {
                            Id = 16,
                            Event = 8,
                            MachineId = 1,
                            ModbusIp = 2280,
                            OperationName = "Duruş Bitir"
                        },
                        new
                        {
                            Id = 5,
                            Event = 1,
                            MachineId = 2,
                            ModbusIp = 2281,
                            OperationName = "Hazırlık Başlat"
                        },
                        new
                        {
                            Id = 6,
                            Event = 2,
                            MachineId = 2,
                            ModbusIp = 2281,
                            OperationName = "Hazırlık Bitir"
                        },
                        new
                        {
                            Id = 7,
                            Event = 3,
                            MachineId = 2,
                            ModbusIp = 2274,
                            OperationName = "Üretim Başlat"
                        },
                        new
                        {
                            Id = 8,
                            Event = 4,
                            MachineId = 2,
                            ModbusIp = 2274,
                            OperationName = "Üretim Bitir"
                        },
                        new
                        {
                            Id = 17,
                            Event = 5,
                            MachineId = 2,
                            OperationName = "Otomatik Üretim Başlat"
                        },
                        new
                        {
                            Id = 18,
                            Event = 6,
                            MachineId = 2,
                            ModbusIp = 4206,
                            OperationName = "Otomatik Üretim Bitir"
                        },
                        new
                        {
                            Id = 19,
                            Event = 7,
                            MachineId = 2,
                            ModbusIp = 2280,
                            OperationName = "Duruş Başlat"
                        },
                        new
                        {
                            Id = 20,
                            Event = 8,
                            MachineId = 2,
                            ModbusIp = 2280,
                            OperationName = "Duruş Bitir"
                        },
                        new
                        {
                            Id = 9,
                            Event = 1,
                            MachineId = 3,
                            ModbusIp = 2282,
                            OperationName = "Hazırlık Başlat"
                        },
                        new
                        {
                            Id = 10,
                            Event = 2,
                            MachineId = 3,
                            ModbusIp = 2282,
                            OperationName = "Hazırlık Bitir"
                        },
                        new
                        {
                            Id = 11,
                            Event = 3,
                            MachineId = 3,
                            ModbusIp = 2275,
                            OperationName = "Üretim Başlat"
                        },
                        new
                        {
                            Id = 12,
                            Event = 4,
                            MachineId = 3,
                            ModbusIp = 2275,
                            OperationName = "Üretim Bitir"
                        },
                        new
                        {
                            Id = 21,
                            Event = 5,
                            MachineId = 3,
                            OperationName = "Otomatik Üretim Başlat"
                        },
                        new
                        {
                            Id = 22,
                            Event = 6,
                            MachineId = 3,
                            ModbusIp = 4206,
                            OperationName = "Otomatik Üretim Bitir"
                        },
                        new
                        {
                            Id = 23,
                            Event = 7,
                            MachineId = 3,
                            ModbusIp = 2280,
                            OperationName = "Duruş Başlat"
                        },
                        new
                        {
                            Id = 24,
                            Event = 8,
                            MachineId = 3,
                            ModbusIp = 2280,
                            OperationName = "Duruş Bitir"
                        });
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OperationLogs");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.OperationParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParameterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.HasIndex("ParameterId");

                    b.ToTable("OperationParameters");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Parameters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MachineId = 1,
                            ParameterName = "Hız",
                            ValueType = "int"
                        },
                        new
                        {
                            Id = 2,
                            MachineId = 1,
                            ParameterName = "Sıcaklık",
                            ValueType = "int"
                        },
                        new
                        {
                            Id = 3,
                            MachineId = 2,
                            ParameterName = "Hız",
                            ValueType = "int"
                        },
                        new
                        {
                            Id = 4,
                            MachineId = 2,
                            ParameterName = "Sıcaklık",
                            ValueType = "int"
                        },
                        new
                        {
                            Id = 5,
                            MachineId = 3,
                            ParameterName = "Cnc Ilerleme Hizi",
                            ValueType = "int"
                        },
                        new
                        {
                            Id = 6,
                            MachineId = 3,
                            ParameterName = "Ariza Alarm Sayisi",
                            ValueType = "int"
                        });
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Stoppage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReasonStoppageName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReasonStoppageValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Stoppages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MachineId = 1,
                            ReasonStoppageName = "Bakım Arıza",
                            ReasonStoppageValue = 45
                        },
                        new
                        {
                            Id = 2,
                            MachineId = 1,
                            ReasonStoppageName = "Planlı Duruş",
                            ReasonStoppageValue = 60
                        },
                        new
                        {
                            Id = 3,
                            MachineId = 1,
                            ReasonStoppageName = "Deneme Duruşu",
                            ReasonStoppageValue = 5
                        });
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Operation", b =>
                {
                    b.HasOne("MachineSimulation.Entities.Concrete.Machine", "Machine")
                        .WithMany("Operations")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.OperationParameter", b =>
                {
                    b.HasOne("MachineSimulation.Entities.Concrete.Operation", "Operation")
                        .WithMany("OperationParameters")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineSimulation.Entities.Concrete.Parameter", "Parameter")
                        .WithMany("OperationParameters")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Operation");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Parameter", b =>
                {
                    b.HasOne("MachineSimulation.Entities.Concrete.Machine", "Machine")
                        .WithMany("Parameters")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Stoppage", b =>
                {
                    b.HasOne("MachineSimulation.Entities.Concrete.Machine", "Machine")
                        .WithMany("Stopages")
                        .HasForeignKey("MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Machine", b =>
                {
                    b.Navigation("Operations");

                    b.Navigation("Parameters");

                    b.Navigation("Stopages");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Operation", b =>
                {
                    b.Navigation("OperationParameters");
                });

            modelBuilder.Entity("MachineSimulation.Entities.Concrete.Parameter", b =>
                {
                    b.Navigation("OperationParameters");
                });
#pragma warning restore 612, 618
        }
    }
}
