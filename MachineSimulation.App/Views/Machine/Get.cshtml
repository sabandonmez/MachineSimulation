@model MachineDetailsDto

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/get.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  
</head>
<body>
    <div class="mt-5">
        <div class="pb-3">
            <h3>@Model.MachineName</h3>

        </div>
        <div class="row">
            <!-- Sidebar Alanı -->
     

            <!-- Content Alanı -->
    
                    <!-- İlk içerik alanı -->
                    <div class="col-md-6">
                <!-- View dosyanız -->
                <div class="graph-card-blue card-div h-100">
                    <h2>Kalite Kriter Verisi</h2>
                    <div class="row">
                        @foreach (var parameter in Model.Parameters)
                        {
                            <div class="col-md-6 mb-3">
                                <div class="card white-border-card">
                                    <div class="card-header">
                                        @parameter.ParameterName
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">123</h5>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="card-div graph-card-orange mt-5 align-top">
                    <h2>Parametre Grafikleri</h2>
                    <div id="graphs-container"  class="graphs-property">
                        <!-- JavaScript ile dinamik olarak grafik kartları buraya eklenecek -->
                    </div>
                </div>


                </div>

                    <!-- İkinci içerik alanı -->
                    <div class="col-md-6">
                <div class="card-div graph-card-green align-top">

                            <h2>Üretim Verisi</h2>
                            <div>
                                <button id="hazirlikBaslat" class="btn btn-success mb-2">Hazırlık Başlat</button>
                                <button id="hazirlikBitir" class="btn btn-danger mb-2">Hazırlık Bitir</button>
                            </div>

                            <div>
                                <button id="uretimBaslatDurdur" class="btn btn-success mb-2">Üretim Başlat</button>
                                <button id="uretimiDurdur" class="btn btn-danger mb-2">Üretimi Durdur</button>
                            </div>
                        </div>
                <div class="card-div graph-card-pink mt-5 align-top scrollable-logs">
                    <div class="container">
                        <h2>Log Kayıtları</h2>
                        <partial name="_OperationLogs" model="Model.OperationLogs" />
                    </div>
                </div>
                    </div>
             

         
        </div>

        </div>
            
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.7.12/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
            $(document).ready(function () {
                var urlSegments = window.location.pathname.split('/');
                var machineId = urlSegments[urlSegments.length - 1];
                $.ajax({
                    url: 'Machine/GetMachineParameters/' + machineId,
                    type: 'GET',
                    success: function (data) {
                        var parametersData = {};
                        data.forEach(function (param) {
                            parametersData[param.parameterName] = param.parameterValue.map(Number);
                        });
                        createCharts(parametersData);
                    }
                });
            });

        function createCharts(parametersData) {
            var graphsContainer = $('#graphs-container');
            graphsContainer.empty(); // Mevcut grafikleri temizle

            $.each(parametersData, function (parameterName, values) {
                var labels = values.map(function (_, index) {
                    return 'Ölçüm ' + (index + 1);
                });

                var canvasId = 'graph-' + parameterName.replace(/\s+/g, '-');
                var graphDiv = $('<div>', {
                    class: 'graph-card',
                    html: $('<canvas>', { id: canvasId })
                });

                graphsContainer.append(graphDiv);

                var ctx = document.getElementById(canvasId).getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: parameterName,
                            data: values,
                            backgroundColor: 'orange',
                            borderColor: 'black',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false, // Bu ayar yükseklik/genişlik oranını korumaz
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
        }


        </script>




</body>
</html>
