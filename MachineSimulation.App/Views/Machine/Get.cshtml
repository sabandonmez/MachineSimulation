@model MachineDetailsDto

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/get.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  
</head>
<body>
    <div class="mt-3">
        <div class="pb-3">
            <h3>@Model.MachineName</h3>

        </div>
        <div class="row">
            <!-- Content Alanı -->
    
                    <!-- İlk içerik alanı -->
                    <div class="col-md-6">
                <!-- View dosyanız -->
                <div class="graph-card-orange kalite-card-div h-100 scrollable-quality-datas">
                    <div class="kalite-card">
                        <h4 class="kalite-card-title">
                            Kalite Kriter Verisi
                        </h4>
                    </div>

                    <hr class="line-for-cart" />
                    <div class="row">
                        @foreach (var parameter in Model.Parameters)
                        {
                            <div class="col-md-6 mb-2">
                                
                                <div class="card white-border-card" style="text-align:center;align-content:center">
                                    <div class="card-header" title="@parameter.ParameterName">
                                        <h6>@parameter.ParameterName</h6>
                                    </div>
                                    
                                    <div class="card-body">
                                        <h4 class="card-title">123</h4>
                                    </div>
                                </div>
                            </div>

                        }
                    </div>
                </div>

                <div class="card-div graph-card-green mt-4 align-top">
                 
                    <div class="parametre-card ">
                        <h4 class="parametre-card-title">
                            Parametre Grafikleri
                        </h4>
                    </div>
                        
                 
                 
                    <hr class="line-for-cart" />
                    <div id="graphs-container"  class="graphs-property">
                        <!-- JavaScript ile dinamik olarak grafik kartları buraya eklenecek -->
                    </div>
                </div>


                </div>

                    <!-- İkinci içerik alanı -->
                    <div class="col-md-6">


                <div class="uretim-card-div graph-card-blue align-top scrollable-production-datas">

                    <div class="uretim-card">
                        <h4 class="uretim-card-title">
                            Üretim Verisi
                        </h4>
                    </div>

                    <hr class="line-for-cart" />

                    <!-- Hazırlık bölümü -->
                    <div class="hazirlik-bolumu">
                        <div class="buton-grubu">
                            <button id="hazirlikBaslat" class="btn btn-green">Hazırlık Başlat</button>
                            <button id="hazirlikBitir" class="btn btn-red">Hazırlık Bitir</button>
                        </div>
                        <div class="sure-label-grubu">
                            <span id="hazirlikSuresiLabel" class="süre-label">Hazırlık Süresi: <span id="sure">0</span></span>
                        </div>
                    </div>

                    <hr />

                    <!-- Üretim bölümü -->
                    <div class="uretim-bolumu">
                        <div class="buton-grubu">
                            <button id="uretimBaslatDurdur" class="btn btn-green">Üretim Başlat</button>
                            <button id="uretimiDurdur" class="btn btn-red">Üretimi Durdur</button>
                        </div>
                        <div class="sure-label-grubu">
                            <span id="uretimSuresiLabel" class="süre-label">Üretim Süresi: <span id="üretimSüresi">0</span></span>
              
                            <div id="uretimSuresiListesi">Üretim Süreleri: </div>
                        </div>
                    </div>
                    <hr />
                    <!-- Toplam süre -->
                    <div class="d-flex flex-column align-items-center">
                        <span id="toplamSureLabel" class="sure-label mb-1">Toplam Üretim Süresi: <span id="toplamSure">0</span></span>
                        
                    </div>

                </div>



                



                <div class="log-card-div graph-card-pink mt-4 align-top scrollable-logs">
                    <div class="container">
                        <div class="log-card ">
                            <h4 class="log-card-title">
                                Log Kayıtları
                            </h4>
                        </div>

                        <hr class="line-for-cart" /> 
                        <partial name="_OperationLogs" model="Model.OperationLogs" />
                    </div>
                </div>
                    </div>
             

         
        </div>

        </div>
            
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.7.12/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

        <script>
        $(document).ready(function () {
            var graphsPerPage = 1; // Her sayfada görüntülenecek grafik sayısı
            var currentPage = 1; // Başlangıçta görüntülenecek sayfa
            var parametersData = {}; // Parametre verileri burada saklanacak
            var totalPages = 0; // Toplam sayfa sayısı, hesaplanacak

            // Sayfalama için HTML elementleri
            var paginationContainer = $('<div>', {
                id: 'pagination-controls',
                class: 'pagination-container' // Bu sınıfı CSS'te tanımlayacağız
            });

            var prevButton = $('<button>', {
                html: '<i class="fa-solid fa-chevron-left"></i>',
                click: function () { changePage(-1); },
                class: 'pagination-button' // Bu sınıfı CSS'te tanımlayacağız
            }).prop('disabled', currentPage === 1);

            var nextButton = $('<button>', {
                html: '<i class="fa-solid fa-chevron-right"></i>',
                click: function () { changePage(1); },
                class: 'pagination-button' // Bu sınıfı CSS'te tanımlayacağız
            }).prop('disabled', currentPage === totalPages);

            paginationContainer.append(prevButton, nextButton);
            $('.card-div.graph-card-green').append(paginationContainer);

            function changePage(delta) {
                currentPage += delta;
                // Sayfa sınırlarını kontrol et
                currentPage = Math.max(1, Math.min(currentPage, totalPages));
                createCharts(currentPage);
            }

            function createCharts(page) {
                var graphsContainer = $('#graphs-container');
                graphsContainer.empty(); // Mevcut grafikleri temizle

                // Hangi grafiklerin gösterileceğini belirle
                var startIndex = (page - 1) * graphsPerPage;
                var endIndex = startIndex + graphsPerPage;
                var parameterNames = Object.keys(parametersData).slice(startIndex, endIndex);

                $.each(parameterNames, function (_, parameterName) {
                    var values = parametersData[parameterName];
                    var labels = values.map(function (_, index) {
                        return 'Ölçüm ' + (index + 1);
                    });

                    var canvasId = 'graph-' + parameterName.replace(/\s+/g, '-');
                    var graphDiv = $('<div>', {
                        class: 'graph-card',
                        html: $('<canvas>', { id: canvasId })
                    });

                    graphsContainer.append(graphDiv);

                    var ctx = document.getElementById(canvasId).getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: parameterName,
                                data: values,
                                backgroundColor: 'rgba(0, 128, 0, 0.5)',
                                borderColor: 'green',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false, // Bu ayar yükseklik/genişlik oranını korumaz
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                });

                // Toplam sayfa sayısını güncelle
                totalPages = Math.ceil(Object.keys(parametersData).length / graphsPerPage);
                // Sayfalama kontrollerinin görünürlüğünü güncelle
                prevButton.prop('disabled', currentPage === 1);
                nextButton.prop('disabled', currentPage === totalPages);
            }

            // Veri yükleme işlemi
            var urlSegments = window.location.pathname.split('/');
            var machineId = urlSegments[urlSegments.length - 1];
            $.ajax({
                url: 'Machine/GetMachineParameters/' + machineId,
                type: 'GET',
                success: function (data) {
                    data.forEach(function (param) {
                        parametersData[param.parameterName] = param.parameterValue.map(Number);
                    });
                    totalPages = Math.ceil(Object.keys(parametersData).length / graphsPerPage);
                    createCharts(currentPage);
                }
            });
        });

        </script>
    <script>
        $(document).ready(function () {
            var hazirlikTimer, uretimTimer;
            var hazirlikSuresi = 0, uretimSuresi = 0, toplamSure = 0;
            var hazirlikSuresiEklendi = false;
            var uretimSuresiListesi = [];  // Üretim sürelerini saklamak için bir liste

            $('#hazirlikBaslat').click(function () {
                hazirlikSuresi = 0;
                $(this).prop('disabled', true);
                $('#hazirlikBitir').prop('disabled', false);
                hazirlikTimer = setInterval(function () {
                    hazirlikSuresi++;
                    $('#sure').text(hazirlikSuresi);  // Hazırlık süresini güncelle
                }, 1000);
            });

            $('#hazirlikBitir').click(function () {
                clearInterval(hazirlikTimer);
                $('#hazirlikBaslat').prop('disabled', false);  // Bu butonun tekrar etkinleştirilmesi gerekiyor.
                $(this).prop('disabled', true);
                toplamSure += hazirlikSuresi;
                hazirlikSuresi = 0;
                $('#sure').text(hazirlikSuresi);  // Hazırlık süresini sıfırla
                $('#toplamSure').text(toplamSure + " saniye");
            });
            $('#uretimBaslatDurdur').click(function () {
                uretimSuresi = 0;
                $(this).prop('disabled', true);
                $('#uretimiDurdur').prop('disabled', false);
                uretimTimer = setInterval(function () {
                    uretimSuresi++;
                    $('#üretimSüresi').text(uretimSuresi);
                }, 1000);
            });

            $('#uretimiDurdur').click(function () {
                clearInterval(uretimTimer);
                $('#uretimBaslatDurdur').prop('disabled', false);
                $(this).prop('disabled', true);
                uretimSuresiListesi.push(uretimSuresi);  // Üretim süresini listeye ekle
                toplamSure += uretimSuresi;
                uretimSuresi = 0;
                $('#üretimSüresi').text(uretimSuresi);
                $('#toplamSure').text(toplamSure + " saniye");
                $('#uretimSuresiListesi').text('Üretim Süreleri: ' + uretimSuresiListesi.join(', '));  // Listeyi göster
            });

            // Başlangıçta butonları uygun duruma getir
            $('#hazirlikBitir').prop('disabled', true);
            $('#uretimiDurdur').prop('disabled', true);
        });


    </script>




</body>
</html>
