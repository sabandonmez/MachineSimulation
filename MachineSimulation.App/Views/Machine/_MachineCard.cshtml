@model Machine

<link rel="stylesheet" href="~/css/machine-card.css" asp-append-version="true" />
<div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 my-3">
    <div class="card card-disconnect" onclick="redirectOnClick(event, '@Model.Id', '@Url.Action("Get", "Machine", new { id = Model.Id })')">
        <img src="@Url.Content($"~/images/machines/{Model.ImageUrl}")"
             onerror="this.onerror=null;this.src='@Url.Content("~/images/machines/defaultMachine.jpg")';"
             class="card-img-top" alt="@Model.MachineName">
        <div class="card-body">
            <h5 class="card-title">@Model.MachineName</h5>
            <div class="">

                <button id="connect-btn-@Model.Id" onclick="toggleConnection(@Model.Id); event.stopPropagation();" class="btn connect-btn connect-pink-button btn-lg">
                    Seç
                </button>
            </div>
        </div>
    </div>
    <div id="notification-container" style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;"></div>
</div>
<script>

    document.addEventListener('DOMContentLoaded', function () {
        // Tüm bağlantı butonlarını kontrol et
        var connectButtons = document.querySelectorAll('.connect-btn');
        connectButtons.forEach(function (button) {
            var machineId = button.id.split('-')[2];
            var connectionStatus = localStorage.getItem('connection-' + machineId);
            // Bağlantı durumunu kontrol et ve UI'ı güncelle
            if (connectionStatus === 'connected') {
                button.classList.remove('btn-danger');
                button.classList.add('btn-success');
                button.closest('.card').style.background = '#27AE60';
                button.textContent = 'Seçimi Kaldır';
                // Güncel bağlantıyı ayarla
                currentConnectionId = machineId;
            }
        });
    });


    function redirectOnClick(event, url) {
        if (!event.target.closest('button, a')) {
            window.location.href = url;
        }
    }
    function redirectOnClick(event, machineId, detailUrl) {
        var button = document.getElementById('connect-btn-' + machineId);
        // Eğer tıklanan element ya da onun ebeveynleri 'button' ya da 'a' değilse ve makina bağlıysa, sayfayı yönlendir
        if (!event.target.closest('button, a')) {
            var isConnected = localStorage.getItem('connection-' + machineId) === 'connected';
            if (isConnected) {
                window.location.href = detailUrl;
            } else {
                showNotification('Makina ile bağlantı kurmadan detayları göremezsiniz.', 'red');
            }
        }
    }
    function showNotification(message, color = 'gray', duration = 3000) {
        const container = document.getElementById('notification-container');
        const notification = document.createElement('div');

        notification.style.background = color;
        notification.style.color = 'white';
        notification.style.padding = '10px';
        notification.style.marginBottom = '5px';
        notification.style.borderRadius = '5px';
        notification.textContent = message;

        container.appendChild(notification);

        setTimeout(() => {
            container.removeChild(notification);
        }, duration);
    }

    var currentConnectionId = null;

    function toggleConnection(machineId) {
        var button = document.getElementById('connect-btn-' + machineId);
        var card = button.closest('.card');
        var action = button.textContent.trim() === 'Seç' ? 'ModbusConnect' : 'ModbusDisconnect';

        // Kullanıcı zaten bağlıysa ve başka bir bağlantı kurmak istiyorsa uyarı göster
        if (action === 'ModbusConnect' && currentConnectionId !== null && currentConnectionId !== machineId) {
            var confirmChange = confirm("Zaten başka bir makineyi seçtiniz. Seçiminizi değiştirmek istediğinizden emin misiniz?");
            if (!confirmChange) {
                return; // Kullanıcı iptal ederse işlemi durdur
            }

            // Bağlantıyı eski makineden kaldır
            var previousButton = document.getElementById('connect-btn-' + currentConnectionId);
            if (previousButton) {
                previousButton.classList.remove('btn-success');
                previousButton.classList.add('btn-danger');
                previousButton.closest('.card').style.background = '';
                previousButton.textContent = 'Seç';
                localStorage.removeItem('connection-' + currentConnectionId);
            }
        }

        // Kullanıcı bağlantıyı koparmak istiyorsa uyarı göster
        if (action === 'ModbusDisconnect' && currentConnectionId === machineId) {
            var confirmDisconnect = confirm("Herhangi bir eylem gerçekleştirmediniz makina seçimini kaldırmak istediğinizden emin misiniz?");
            if (!confirmDisconnect) {
                return; // Kullanıcı iptal ederse işlemi durdur
            }
        }

        button.disabled = true;

        fetch(`/Machine/${action}?machineId=${machineId}`, { method: 'GET' })
            .then(response => response.json())
            .then(data => {
                if (data) {
                    if (action === 'ModbusConnect') {
                        button.classList.remove('btn-danger');
                        button.classList.add('btn-success');
                        card.style.background = '#27AE60';
                        button.textContent = 'Seçimi Kaldır';
                        localStorage.setItem('connection-' + machineId, 'connected');
                        showNotification(machineId + " Id ' sine sahip makina seçtiniz.", '#27AE60');
                        currentConnectionId = machineId; // Yeni bağlantıyı kaydet
                    } else {
                        button.classList.remove('btn-success');
                        button.classList.add('btn-danger');
                        card.style.background = '';
                        button.textContent = 'Seç';
                        localStorage.removeItem('connection-' + machineId);
                        showNotification(machineId + " Id ' sine sahip makina seçiminiz kaldırıldı.", '#ab003c');
                        if (currentConnectionId === machineId) {
                            currentConnectionId = null; // Bağlantıyı sıfırla
                        }
                        localStorage.removeItem('connection-' + machineId);
                        currentConnectionId = null;
                       
                    }
                } else {
                    showNotification('İşlem başarısız.', 'purple');
                }
            })
            .catch(error => {
                console.error('Hata:', error);
                showNotification('Bir hata oluştu.', 'blue');
            })
            .finally(() => {
                button.disabled = false;
            });
    }


</script>